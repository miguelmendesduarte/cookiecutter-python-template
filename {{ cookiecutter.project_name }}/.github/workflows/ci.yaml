name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  UV_CACHE_DIR: /tmp/.uv-cache
  SRC_DIR: src
  TEST_DIR: tests

jobs:
  quality-check:
    name: Code Quality & Type Checking
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: ${{ env.UV_CACHE_DIR }}
          key: uv-${{ runner.os }}-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-
            uv-

      - name: Install dependencies
        run: uv sync --locked --all-extras --dev

      - name: Run Ruff (Linting)
        run: uv run ruff check "${{ env.SRC_DIR }}" "${{ env.TEST_DIR }}"

      - name: Run MyPy (Static Type Checks)
        run: uv run mypy "${{ env.SRC_DIR }}" "${{ env.TEST_DIR }}"

      - name: Minimize uv cache
        run: uv cache prune --ci

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    needs: quality-check
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: ${{ env.UV_CACHE_DIR }}
          key: uv-${{ runner.os }}-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-
            uv-

      - name: Install dependencies
        run: uv sync --locked --all-extras --dev

      - name: Run Tests
        run: uv run pytest --cov="${{ env.SRC_DIR }}" --cov-report=term-missing "${{ env.TEST_DIR }}"

      - name: Minimize uv cache
        run: uv cache prune --ci    
